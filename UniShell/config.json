{
  "session_data": {
    "commands_run": [],
    "files_generated": [],
    "errors_explained": []
  },
  "languages": {
    ".py": "python",
    ".java": "java",
    ".c": "c",
    ".cpp": "cpp",
    ".js": "javascript"
  },
  "algorithms": {
    "insertion": "insertion_sort",
    "selection": "selection_sort",
    "bubble": "bubble_sort",
    "quick": "quick_sort",
    "merge": "merge_sort",
    "heap": "heap_sort",
    "binary": "binary_search",
    "linear": "linear_search",
    "fibonacci": "fibonacci",
    "factorial": "factorial",
    "calculator": "calculator",
    "matrix": "matrix",
    "array": "array_program",
    "linked": "linked_list",
    "stack": "stack",
    "queue": "queue",
    "tree": "tree",
    "graph": "graph",
    "palindrome": "palindrome",
    "prime": "prime_checker",
    "game": "game",
    "sort": "sorting_program"
  },
  "language_patterns": [
    [
      "\\b(java)\\s+and\\s+(python)\\b",
      [
        "java",
        "python"
      ]
    ],
    [
      "\\b(python)\\s+and\\s+(java)\\b",
      [
        "python",
        "java"
      ]
    ],
    [
      "\\b(c)\\s+and\\s+(python)\\b",
      [
        "c",
        "python"
      ]
    ],
    [
      "\\b(java)\\s*,\\s*(python)\\b",
      [
        "java",
        "python"
      ]
    ]
  ],
  "path_markers": [
    " at ",
    " in ",
    " to ",
    " directory ",
    " folder ",
    " path "
  ],
  "polite_words": [
    "please",
    "kindly",
    "could you",
    "can you",
    "i want",
    "i need"
  ],
  "templates": {
    "java": "public class {class_name} {\n    public static void main(String[] args) {\n        System.out.println(\"{description}\");\n    }\n}",
    "python": "\"\"\"{description}\"\"\"\ndef main():\n    print(\"{description}\")\n\nif __name__ == \"__main__\": main()",
    "c": "#include <stdio.h>\nint main() {\n    printf(\"{description}\\n\");\n    return 0;\n}",
    "cpp": "#include <iostream>\nusing namespace std;\nint main() {\n    cout << \"{description}\" << endl;\n    return 0;\n}"
  },
  "help_commands": {
    "natural_commands": [
      "\ud83d\ude80 generate <algorithm> using <language>",
      "\ud83d\udee0\ufe0f  create calculator using python in C:\\path",
      "\ud83c\udfb2 make fibonacci using java and python",
      "\u25b6\ufe0f  run my_program.py",
      "\ud83d\udee0\ufe0f  compile Test.java"
    ],
    "direct_commands": [
      "\u2699\ufe0f  generate/create/make <algorithm> using <language>",
      "\u25b6\ufe0f  run/execute <filename>",
      "\ud83d\udd28 compile <filename>",
      "\ud83d\udcd6 explain <filename> or explain <error>"
    ],
    "system_commands": [
      "\u2753 help - Show this guide",
      "\ud83e\uddf9 clear/reset - Clear session data",
      "\ud83d\udda5\ufe0f  cls/clr - Clear screen",
      "\ud83d\udeaa exit/quit - Exit UniShell"
    ],
    "features": [
      "\ud83e\udd16 AI-powered code generation and error analysis",
      "\ud83c\udf10 Multi-language support (Python, Java, C, C++)",
      "\ud83d\uddc2\ufe0f  Smart path handling for any directory",
      "\ud83c\udff7\ufe0f  Intelligent filename generation",
      "\u26a1 Natural language understanding"
    ],
    "examples": [
      "\ud83d\udcc2 generate sorting algorithm using python at /tmp",
      "\ud83c\udfae create game using java in C:\\Users\\Desktop"
    ]
  }
}